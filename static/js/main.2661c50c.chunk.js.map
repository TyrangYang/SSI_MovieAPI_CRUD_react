{"version":3,"sources":["slicers/movieDataSlice.js","components/MovieItem.jsx","components/EditCard.jsx","components/ListMovie.jsx","components/MovieDisplayPanel.jsx","components/AddNewMovie.jsx","App.js","app/store.js","serviceWorker.js","index.js","css/MovieItem.module.css","css/EditCard.module.css","css/MovieDisplayPanel.module.css","css/AddNewMovie.module.css"],"names":["movieDataSlice","createSlice","name","initialState","movies","initialized","favoriteMovies","totalPages","reducers","setMovies","state","action","payload","addMovies","deleteMovies","filter","e","id","addFavoriteMovie","map","newItem","isFavorite","removeFavoriteMovie","editMovie","popularity","title","actions","React","memo","setInitEditCard","setDisplayEditCard","dispatch","useDispatch","className","styleGroup","itemContainer","Paper","elevation","Grid","container","contentContainer","item","xs","svgBtn","svgBtnStar","onClick","svgBtnDel","window","confirm","EditCard","initState","useForm","register","handleSubmit","editCardBackground","Container","maxWidth","test","cardContainer","closeTag","formContainer","onSubmit","data","TextField","label","inputRef","defaultValue","required","type","Button","variant","color","moviesToDisplay","curPageNum","setCurPageNum","key","Pagination","count","page","onChange","val","MovieDisplayPanel","useSelector","allMovies","useState","initEditCard","displayEditCard","tabIndex","setTabIndex","isSortByName","setIsSortByName","useEffect","axios","get","then","results","element","total_pages","useMemo","sort","a","b","favoriteMoviesToDisplay","tabContainer","Tabs","value","Tab","FormControlLabel","control","Checkbox","length","emptyText","AddNewMovie","v4","buttonContainer","App","style","fontSize","textAlign","configureStore","reducer","movieDataReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2661c50c.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst movieDataSlice = createSlice({\n    name: 'movieDataSlice',\n    initialState: {\n        movies: [],\n        initialized: false,\n        favoriteMovies: [],\n        totalPages: 0,\n    },\n\n    reducers: {\n        setMovies: (state, action) => {\n            return {\n                ...state,\n                movies: action.payload.movies,\n                initialized: true,\n                totalPages: action.payload.totalPages,\n            };\n        },\n        addMovies: (state, action) => {\n            return {\n                ...state,\n                movies: [action.payload, ...state.movies],\n            };\n        },\n        deleteMovies: (state, action) => {\n            return {\n                ...state,\n                movies: state.movies.filter((e) => e.id !== action.payload.id),\n                // delete favorite\n                favoriteMovies: state.favoriteMovies.filter(\n                    (e) => e.id !== action.payload.id\n                ),\n            };\n        },\n        addFavoriteMovie: (state, action) => {\n            return {\n                ...state,\n                movies: state.movies.map((e) => {\n                    let newItem = { ...e };\n                    if (newItem.id === action.payload.id) {\n                        newItem.isFavorite = true;\n                    }\n                    return newItem;\n                }),\n                favoriteMovies: [\n                    ...state.favoriteMovies,\n                    {\n                        ...state.movies\n                            .filter((e) => e.id === action.payload.id)\n                            .map((e) => {\n                                let newItem = { ...e };\n                                newItem.isFavorite = true;\n                                return newItem;\n                            })[0],\n                    },\n                ],\n            };\n        },\n        removeFavoriteMovie: (state, action) => {\n            return {\n                ...state,\n                movies: state.movies.map((e) => {\n                    let newItem = { ...e };\n                    if (newItem.id === action.payload.id) {\n                        newItem.isFavorite = false;\n                    }\n                    return newItem;\n                }),\n                favoriteMovies: state.favoriteMovies.filter(\n                    (e) => e.id !== action.payload.id\n                ),\n            };\n        },\n        editMovie: (state, action) => {\n            return {\n                ...state,\n                movies: state.movies.map((e) => {\n                    let newItem = { ...e };\n                    if (e.id === action.payload.id) {\n                        newItem.popularity = action.payload.popularity;\n                        newItem.title = action.payload.title;\n                    }\n                    return newItem;\n                }),\n                favoriteMovies: state.favoriteMovies.map((e) => {\n                    let newItem = { ...e };\n                    if (e.id === action.payload.id) {\n                        newItem.popularity = action.payload.popularity;\n                        newItem.title = action.payload.title;\n                    }\n                    return newItem;\n                }),\n            };\n        },\n    },\n});\n\nexport const {\n    addMovies,\n    deleteMovies,\n    setMovies,\n    addFavoriteMovie,\n    removeFavoriteMovie,\n    editMovie,\n} = movieDataSlice.actions;\n\nexport const fetchMovies = (page) => (dispatch) => {\n    const apiURL = 'https://api.themoviedb.org/3/movie';\n    const apiKey = 'ae09140db64f8c19eae245a3b5feed8a';\n    axios\n        .get(`${apiURL}/popular?api_key=${apiKey}&language=en-US&page=${page}`)\n        .then(({ data }) => {\n            const movies = data.results.map((element) => {\n                return {\n                    id: element.id,\n                    popularity: element.popularity,\n                    title: element.title,\n                    isFavorite: false,\n                };\n            });\n            const totalPages = data.total_pages;\n            dispatch(setMovies({ movies, totalPages }));\n        });\n};\n\nexport default movieDataSlice.reducer;\n","import React from 'react';\nimport {\n    deleteMovies,\n    addFavoriteMovie,\n    removeFavoriteMovie,\n} from '../slicers/movieDataSlice';\nimport { useDispatch } from 'react-redux';\n\n// import styling\nimport { Paper, Grid } from '@material-ui/core';\nimport {\n    AiFillDelete,\n    AiFillStar,\n    AiOutlineStar,\n    AiFillEdit,\n} from 'react-icons/ai';\nimport { MdDragHandle } from 'react-icons/md';\nimport styleGroup from '../css/MovieItem.module.css';\n\nfunction MovieItem({\n    id,\n    popularity,\n    title,\n    isFavorite,\n    setInitEditCard, // passing initial value for edit card component\n    setDisplayEditCard, // trigger a signal to show edit card component\n}) {\n    const dispatch = useDispatch();\n    // console.log('render items');\n    return (\n        <div className={styleGroup.itemContainer}>\n            <Paper elevation={3}>\n                <Grid container className={styleGroup.contentContainer}>\n                    <Grid item xs={1}>\n                        {isFavorite ? (\n                            <AiFillStar\n                                className={`${styleGroup.svgBtn} ${styleGroup.svgBtnStar}`}\n                                onClick={() =>\n                                    dispatch(removeFavoriteMovie({ id }))\n                                }\n                            />\n                        ) : (\n                            <AiOutlineStar\n                                className={`${styleGroup.svgBtn} ${styleGroup.svgBtnStar}`}\n                                onClick={() =>\n                                    dispatch(addFavoriteMovie({ id }))\n                                }\n                            />\n                        )}\n                    </Grid>\n                    <Grid item xs={6}>\n                        <p> {title} </p>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <p> {popularity} </p>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <AiFillDelete\n                            className={`${styleGroup.svgBtn} ${styleGroup.svgBtnDel}`}\n                            onClick={() => {\n                                if (window.confirm('Want deleted?'))\n                                    dispatch(deleteMovies({ id }));\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={1}>\n                        <AiFillEdit\n                            className={`${styleGroup.svgBtn}`}\n                            onClick={() => {\n                                setDisplayEditCard(true);\n                                setInitEditCard({ id, title, popularity });\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={1}>\n                        <MdDragHandle className={`${styleGroup.svgBtn}`} />\n                    </Grid>\n                </Grid>\n            </Paper>\n        </div>\n    );\n}\n\nexport default React.memo(MovieItem);\n","import React from 'react';\nimport { Container, Paper, TextField, Button } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nimport { editMovie } from '../slicers/movieDataSlice';\nimport { useDispatch } from 'react-redux';\nimport styleGroup from '../css/EditCard.module.css';\n\nexport default function EditCard({\n    initState: { id, title, popularity },\n    setDisplayEditCard,\n}) {\n    const { register, handleSubmit } = useForm();\n    const dispatch = useDispatch();\n    // console.log('render edit card');\n    return (\n        <div className={styleGroup.editCardBackground}>\n            <Container maxWidth=\"xs\" className={styleGroup.test}>\n                <Paper elevation={3} className={styleGroup.cardContainer}>\n                    <span\n                        className={styleGroup.closeTag}\n                        onClick={() => {\n                            setDisplayEditCard(false);\n                        }}\n                    >\n                        &times;\n                    </span>\n                    <form\n                        className={styleGroup.formContainer}\n                        onSubmit={handleSubmit((data) => {\n                            dispatch(\n                                editMovie({\n                                    id,\n                                    title: data.title,\n                                    popularity: data.popularity,\n                                })\n                            );\n                            setDisplayEditCard(false);\n                        })}\n                    >\n                        <TextField\n                            label=\"TITLE:\"\n                            name=\"title\"\n                            inputRef={register()}\n                            defaultValue={title}\n                            required\n                        />\n                        <TextField\n                            label=\"POPULARITY:\"\n                            name=\"popularity\"\n                            type=\"tel\"\n                            inputRef={register()}\n                            defaultValue={popularity}\n                            required\n                        />\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            CHANGE\n                        </Button>\n                    </form>\n                </Paper>\n            </Container>\n        </div>\n    );\n}\n","import React from 'react';\nimport MovieItem from './MovieItem';\nimport { Pagination } from '@material-ui/lab';\n\nfunction ListMovie({\n    moviesToDisplay,\n    curPageNum,\n    setCurPageNum,\n    totalPages,\n    setInitEditCard,\n    setDisplayEditCard,\n}) {\n    // console.log('render list');\n    return (\n        <div>\n            {moviesToDisplay.map((e) => (\n                <MovieItem\n                    key={e.id}\n                    id={e.id}\n                    popularity={e.popularity}\n                    title={e.title}\n                    isFavorite={e.isFavorite}\n                    setInitEditCard={setInitEditCard}\n                    setDisplayEditCard={setDisplayEditCard}\n                />\n            ))}\n            <Pagination\n                count={totalPages}\n                page={curPageNum}\n                onChange={(e, val) => setCurPageNum(val)}\n                color=\"primary\"\n            />\n        </div>\n    );\n}\n\nexport default React.memo(ListMovie);\n","import React, { useState, useEffect, useMemo } from 'react';\nimport MovieItem from './MovieItem';\nimport EditCard from './EditCard';\nimport ListMovie from './ListMovie';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchMovies } from '../slicers/movieDataSlice';\n\n// import style\nimport {\n    Tabs,\n    Tab,\n    Container,\n    Checkbox,\n    FormControlLabel,\n} from '@material-ui/core';\nimport styleGroup from '../css/MovieDisplayPanel.module.css';\n\nexport default function MovieDisplayPanel() {\n    const dispatch = useDispatch();\n\n    // get state from redux\n    const { movies, favoriteMovies, initialized, totalPages } = useSelector(\n        (state) => state.allMovies\n    );\n\n    // set current page number\n    const [curPageNum, setCurPageNum] = useState(1);\n    // set edit card state\n    const [initEditCard, setInitEditCard] = useState({\n        id: null,\n        title: '123',\n        popularity: 100,\n    });\n    const [displayEditCard, setDisplayEditCard] = useState(false);\n    // set tab state\n    const [tabIndex, setTabIndex] = useState(0);\n    // set sort state\n    const [isSortByName, setIsSortByName] = useState(false);\n\n    // fetch data\n    useEffect(() => {\n        dispatch(fetchMovies(curPageNum));\n    }, [dispatch, curPageNum]);\n\n    // preprocess display data\n    const moviesToDisplay = useMemo(() => {\n        if (isSortByName) {\n            return [...movies].sort((a, b) => {\n                if (a.title < b.title) return -1;\n                if (a.title > b.title) return 1;\n                return 0;\n            });\n        }\n        return movies;\n    }, [movies, isSortByName]);\n\n    const favoriteMoviesToDisplay = useMemo(() => {\n        if (isSortByName) {\n            return [...favoriteMovies].sort((a, b) => {\n                if (a.title < b.title) return -1;\n                if (a.title > b.title) return 1;\n                return 0;\n            });\n        }\n        return favoriteMovies;\n    }, [favoriteMovies, isSortByName]);\n\n    // console.log('render panel');\n    return (\n        <Container maxWidth=\"md\">\n            {/* edit card */}\n            {displayEditCard && (\n                <EditCard\n                    initState={initEditCard}\n                    setDisplayEditCard={setDisplayEditCard}\n                />\n            )}\n            {/* tab */}\n            <div className={styleGroup.tabContainer}>\n                <Tabs\n                    value={tabIndex}\n                    onChange={(e, val) => {\n                        setTabIndex(val);\n                    }}\n                >\n                    <Tab label=\"All Movies\" />\n                    <Tab label=\"Favorite Movies\" />\n                </Tabs>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            value={isSortByName}\n                            onChange={() => {\n                                setIsSortByName(!isSortByName);\n                            }}\n                        />\n                    }\n                    label=\"Sort by Name\"\n                />\n            </div>\n\n            {/* display movies */}\n            {initialized && tabIndex === 0 && (\n                <ListMovie\n                    moviesToDisplay={moviesToDisplay}\n                    curPageNum={curPageNum} // for pagination\n                    setCurPageNum={setCurPageNum} // for pagination\n                    totalPages={totalPages} // for pagination\n                    setInitEditCard={setInitEditCard} // for control edit card\n                    setDisplayEditCard={setDisplayEditCard} // for control edit card\n                />\n            )}\n            {/* display favorite movies */}\n            {tabIndex === 1 &&\n                (favoriteMoviesToDisplay.length === 0 ? (\n                    <div className={styleGroup.emptyText}>\n                        <h2>No favorite Movie currently</h2>\n                    </div>\n                ) : (\n                    favoriteMoviesToDisplay.map((e) => (\n                        <MovieItem\n                            key={e.id + '_fav'}\n                            id={e.id}\n                            popularity={e.popularity}\n                            title={e.title}\n                            isFavorite={e.isFavorite}\n                            setInitEditCard={setInitEditCard}\n                            setDisplayEditCard={setDisplayEditCard}\n                        />\n                    ))\n                ))}\n        </Container>\n    );\n}\n","import React from 'react';\nimport { TextField, Button, Container } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nimport { v4 } from 'uuid';\nimport { addMovies } from '../slicers/movieDataSlice';\nimport { useDispatch } from 'react-redux';\nimport styleGroup from '../css/AddNewMovie.module.css';\n\nexport default function AddNewMovie() {\n    const dispatch = useDispatch();\n    const { register, handleSubmit } = useForm();\n    return (\n        <Container maxWidth=\"md\">\n            <form\n                className={styleGroup.formContainer}\n                onSubmit={handleSubmit((data) => {\n                    dispatch(addMovies({ ...data, id: v4() }));\n                })}\n            >\n                <TextField\n                    label=\"TITLE:\"\n                    name=\"title\"\n                    inputRef={register()}\n                    required\n                />\n                <TextField\n                    label=\"POPULARITY:\"\n                    name=\"popularity\"\n                    type=\"tel\"\n                    inputRef={register()}\n                    required\n                />\n                <div className={styleGroup.buttonContainer}>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                        Add\n                    </Button>\n                </div>\n            </form>\n        </Container>\n    );\n}\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport MovieDisplayPanel from './components/MovieDisplayPanel';\r\nimport AddNewMovie from './components/AddNewMovie';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <h1 style={{ fontSize: '50px', textAlign: 'center' }}>MOVIE</h1>\r\n            <AddNewMovie />\r\n            <MovieDisplayPanel />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport movieDataReducer from '../slicers/movieDataSlice';\r\nexport default configureStore({\r\n    reducer: {\r\n        allMovies: movieDataReducer,\r\n    },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContainer\":\"MovieItem_itemContainer__3VBNf\",\"contentContainer\":\"MovieItem_contentContainer__3m66u\",\"svgBtn\":\"MovieItem_svgBtn__1HJJJ\",\"svgBtnStar\":\"MovieItem_svgBtnStar__22z4b\",\"svgBtnDel\":\"MovieItem_svgBtnDel__3dGKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editCardBackground\":\"EditCard_editCardBackground__3M84O\",\"cardContainer\":\"EditCard_cardContainer__2GHza\",\"closeTag\":\"EditCard_closeTag__3R45N\",\"formContainer\":\"EditCard_formContainer__39Pw5\",\"test\":\"EditCard_test__swnz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabContainer\":\"MovieDisplayPanel_tabContainer__1aX5I\",\"emptyText\":\"MovieDisplayPanel_emptyText__1c_vO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"AddNewMovie_formContainer__3lSxB\",\"buttonContainer\":\"AddNewMovie_buttonContainer__3CxYu\"};"],"sourceRoot":""}